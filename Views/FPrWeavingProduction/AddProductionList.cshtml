@model FPrWeavingProductionViewModel

@if (Model.FPrWeavingProductionList.Any())
{
    <table class="table mt-2 table-condensed" style="border-collapse:collapse;" id="partialView">
        <thead id="thead">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FPrWeavingProduction.POID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FPrWeavingProduction.FABCODE)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FPrWeavingProduction.TOTAL_RUN_LOOM)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FPrWeavingProduction.TOTAL_PROD)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FPrWeavingProduction.TOTAL_EFFECIENCE)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FPrWeavingProduction.TOTAL_RPM)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FPrWeavingProduction.TOTAL_WFTSTOP)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FPrWeavingProduction.TOTAL_WRPSTOP)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FPrWeavingProduction.REMARKS)
                </th>
                <th>
                    @Html.DisplayName("Remove")
                </th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < Model.FPrWeavingProductionList.Count; i++)
            {
                <tr>
                    <td>
                        @Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].POID)
                        @Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].OPT1)
                        @Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].OPT3)
                        @Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].EMPID)
                        @Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].OPT2)
                        @Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].LOOMID)
                        @*@Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].SETID)*@
                        @if (Model.FPrWeavingProductionList[i].OPT3 == "Export")
                        {
                            @Model.FPrWeavingProductionList[i].PO?.SO?.SO_NO
                        }
                        else
                        {
                            @Model.FPrWeavingProductionList[i].OPT3
                        }

                    </td>
                    <td>

                        @Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].FABCODE)

                        @if (Model.FPrWeavingProductionList[i].OPT3 == "Export")
                        {
                            @Model.FPrWeavingProductionList[i].FABCODENavigation?.STYLE_NAME
                        }
                        else
                        {
                            @Model.FPrWeavingProductionList[i].OPT3
                        }
                    </td>
                    <td>

                        @Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].TOTAL_RUN_LOOM)
                        @Model.FPrWeavingProductionList[i].TOTAL_RUN_LOOM
                    </td>
                    <td>

                        @Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].TOTAL_PROD)
                        @Model.FPrWeavingProductionList[i].TOTAL_PROD
                    </td>
                    <td>

                        @Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].TOTAL_EFFECIENCE)
                        @Model.FPrWeavingProductionList[i].TOTAL_EFFECIENCE
                    </td>
                    <td>

                        @Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].TOTAL_RPM)
                        @Model.FPrWeavingProductionList[i].TOTAL_RPM
                    </td>
                    <td>

                        @Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].TOTAL_WFTSTOP)
                        @Model.FPrWeavingProductionList[i].TOTAL_WFTSTOP
                    </td>
                    <td>

                        @Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].TOTAL_WRPSTOP)
                        @Model.FPrWeavingProductionList[i].TOTAL_WRPSTOP
                    </td>
                    <td>
                        @Html.HiddenFor(clc => clc.FPrWeavingProductionList[i].REMARKS)
                        @Model.FPrWeavingProductionList[i].REMARKS
                    </td>
                    <td>
                        <i class="fa fa-trash fa-2x-custom text-danger" onclick="RemoveProductionFromList(@i)" aria-hidden="true"></i>
                    </td>
                </tr>
            }
        <tr class="bg-info text-white">
            <td class="text-right" colspan="2"><i class="fa fa-cart-plus" aria-hidden="true"></i> @Html.DisplayName("Sum Of Total :")</td>
            <td>@($"{Model.FPrWeavingProductionList.Sum(e => e.TOTAL_RUN_LOOM)}")</td>
            <td>@($"{Model.FPrWeavingProductionList.Sum(e => e.TOTAL_PROD)} Mtr")</td>

            @{
                var production = Model.FPrWeavingProductionList.Sum(e => e.TOTAL_PROD) / Model.FPrWeavingProductionList.Sum(e => e.TOTAL_RUN_LOOM);
                var efficiency = Model.FPrWeavingProductionList.Sum(e => e.TOTAL_EFFECIENCE) / Model.FPrWeavingProductionList.Sum(e => e.TOTAL_RUN_LOOM);
                var rpm = Model.FPrWeavingProductionList.Sum(e => e.TOTAL_RPM) / Model.FPrWeavingProductionList.Count / Model.FPrWeavingProductionList.Sum(e => e.TOTAL_RUN_LOOM);
                var weftStop = Model.FPrWeavingProductionList.Sum(e => e.TOTAL_WFTSTOP) / Model.FPrWeavingProductionList.Count / Model.FPrWeavingProductionList.Sum(e => e.TOTAL_RUN_LOOM);
                var warpStop = Model.FPrWeavingProductionList.Sum(e => e.TOTAL_WRPSTOP) / Model.FPrWeavingProductionList.Count / Model.FPrWeavingProductionList.Sum(e => e.TOTAL_RUN_LOOM);
            }


            <td>@($"{Model.FPrWeavingProductionList.Sum(e => e.TOTAL_EFFECIENCE)}")</td>
            <td>@($"{Model.FPrWeavingProductionList.Sum(e => e.TOTAL_RPM)}")</td>
            <td>@($"{Model.FPrWeavingProductionList.Sum(e => e.TOTAL_WFTSTOP)}")</td>
            <td>@($"{Model.FPrWeavingProductionList.Sum(e => e.TOTAL_WRPSTOP)}")</td>
            <td></td>
            <td></td>
        </tr>
        <tr class="bg-info text-white">
            <td class="text-right" colspan="2"><i class="fa fa-cart-plus" aria-hidden="true"></i> @Html.DisplayName("Avarage :")</td>
            <td>@($"{Model.FPrWeavingProductionList.Sum(e => e.TOTAL_RUN_LOOM)}")</td>
            <td>@($"{production:#.##} Mtr")</td>
            
            <td>@($"{efficiency:#.##}%")</td>
            <td>@($"{rpm:#.##}")</td>
            <td>@($"{weftStop:#.##}")</td>
            <td>@($"{warpStop:#.##}")</td>
            <td></td>
            <td></td>
        </tr>
        </tbody>
    </table>
}


<script type="text/javascript" asp-append-version="true">
    function RemoveProductionFromList(removeIndexValue) {
        swal({
            title: "Please Confirm",
            text: "You won't able to revert, Are you sure to remove?",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, sir",
            cancelButtonText: "Not at all"
        },
            function (isConfirm) {
                if (isConfirm) {
                    var data = $('#form').serializeArray();
                    data.push({ name: "removeIndexValue", value: removeIndexValue });
                    $.ajax({
                        async: true,
                        cache: false,
                        data: data,
                        type: "POST",
                        url: '/FPrWeavingProduction/RemoveProductionDetailsList',
                        success: function (partialView, status, xhr) {
                            $('#prodDetails').html(partialView);
                        },
                        error: function (e) {
                            console.log(e);
                        }
                    });
                }
            });
    }
</script>