@using DevExpress.DataProcessing
@model List<HRMS.ViewModels.UserRolesViewModel>

@{
    ViewData["Title"] = "Manage User Roles";
    var userId = ViewBag.userId;
}

<form method="post">
    <div class="card">
        <div class="card-header">
            <h2>Manage User Roles</h2>
            <div class="btn btn-warning">
                @{
                    var val = Model.Any(e => e.IsSelected) ? "Uncheck All" : "Check All";
                }
                <input type="button" class="check" value="@val" />
            </div>
        </div>
        <div class="card-body row">
            @for (int i = 0; i < Model.Count; i++)
            {
                <div class="form-check m-1 col-2">
                    <input type="hidden" asp-for="@Model[i].RoleId" />
                    <input type="hidden" asp-for="@Model[i].RoleName" />
                    <input asp-for="@Model[i].IsSelected" class="form-check-input" />
                    <label class="form-check-label" asp-for="@Model[i].IsSelected">
                        @Model[i].RoleName
                    </label>
                </div>
            }
            <div asp-validation-summary="All" class="text-danger"></div>
        </div>
        <div class="card-footer">
            <input type="submit" value="Update" class="btn btn-warning"
                   style="width:auto" />
            <a asp-action="EditUser" asp-route-id="@userId"
               class="btn btn-danger" style="width:auto">Cancel</a>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        $(function () {
            $('.check:button').click(function () {

                var checked = !$(this).data('checked');
                var atLeastOneIsChecked = $("input:checked").length > 0;
                if (atLeastOneIsChecked) checked = false;
                $('input:checkbox').prop('checked', checked);
                $(this).val(checked ? 'Uncheck All' : 'Check All');
                $(this).data('checked', checked);
            });
        });
    </script>
}
