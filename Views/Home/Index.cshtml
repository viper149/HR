@model ChatUsersMesaages<DenimERP.Models.MESSAGE, DenimERP.Models.ApplicationUser>

@{
    ViewData["Title"] = "Index";
    Layout = Layout;
}

<h3 class="text-center override-message-level">Messaging</h3>

<div class="rounded border border-dark overflow-hidden p-2">
    <div class="rounded left overflow-hidden col-3 border border-info p-2">
        <div class="col-12 p-2">
            <div class="recent_heading">
                <h4>Recent</h4>
            </div>
            <div class="d-flex col-12 p-0 pt-2">
                <input id="searchRecipient" type="text" class="form-control" placeholder="Recipient's username" aria-label="Recipient's username" aria-describedby="basic-addon2">
                <div class="input-group-append">
                    <span class="input-group-text" id="basic-addon2"><i class="fa fa-search"></i></span>
                </div>
            </div>
            <div class="d-inline">
                <ul id="searchRecipientResult" class="list-group text-success d-none"></ul>
            </div>

            <div class="inbox_chat mt-2">
                @{
                    <div class="chat_list active_chat">
                        <div class="chat_people" style="max-height: 200px;">
                            <div class="chat_img"> <img class="img-thumbnail rounded-circle" src="~/images/img.jpg" alt="group"> </div>
                            <div class="col-10 p-2 left active_chat">
                                <h5 class="fa fa-users"> Group Chat</h5>
                                <div class="overflow-auto last_text">
                                    @if (Model.Messages.Any())
                                    {
                                        @Html.Raw(Model.Messages.Last().Text)
                                    }
                                </div>
                                <hr />
                                <span class="chat_date">
                                    @if (Model.Messages.Any())
                                    {
                                        @Model.Messages.Last().SendAt
                                    }
                                </span>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-8 p-4 left m-0">

        <div class="d-inline-flex">
            <div class="form-group">
                <input id="recipient" type="text" class="form-control" placeholder="Recipient will show here. Click add button to add">
            </div>
        </div>

        <!-- Button trigger modal -->
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalCenter"><i class="fa fa-user"></i> Add Recipient</button>

        <!-- Modal -->
        <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle"><i class="fa fa-users"></i> Recipients</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <select id="userInput" asp-items="@(new SelectList(Model.Users,"Id","UserName"))" class="form-control js-example-basic-single">
                            <option value="">Select an option</option>
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="msg_history" id="msg_history">
            @foreach (var message in Model.Messages)
            {
                @if (message.SenderId != Model.CurrentUser.Id)
                {
                    <div class="incoming_msg">
                        <div class="incoming_msg_img">
                            @if (message.Receiver.PhotoPath != null)
                            {
                                <img alt="@message.ReceiverName" class="img-thumbnail rounded-circle" src=@($"/Files/ProfilePhotos/?fileName={@message.Receiver.PhotoPath}")>
                            }
                            else
                            {
                                <img alt="@message.ReceiverName" class="img-thumbnail rounded-circle" src="/images/img.jpg">
                            }
                        </div>

                        <div class="received_msg">
                            @*<div class="received_withd_msg">
                                    <p>
                                        @message.Text
                                    </p>
                                    <span class="time_date"> @Html.DisplayFor(modelItem => message.SendAt)</span>
                                </div>*@
                            <div class="received_withd_msg">
                                <div class="bg-dark text-light p-2 rounded">
                                    @Html.Raw(message.Text)
                                </div>
                                <span class="time_date"> @Html.DisplayFor(modelItem => message.SendAt)</span>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="outgoing_msg">
                        <div class="sent_msg">
                            <div class="border border-dark p-2 rounded">
                                @Html.Raw(message.Text)
                            </div>
                            <span class="time_date"> @Html.DisplayFor(modelItem => message.SendAt)</span>
                        </div>
                    </div>
                }
            }
        </div>
        <div class="type_msg">
            <div class="input_msg_write">
                <div id="editor"></div>
                <div id="sendButton" class="btn btn-primary mt-2 pull-right"><i class="fa fa-send"></i> Send</div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link asp-append-version="true" href="~/css/Hubs/chat.css" rel="stylesheet" />
}

@section Scripts {
    <script asp-append-version="true" src="~/signalr/signalr.min.js"></script>
    <script asp-append-version="true" src="~/js/Hubs/chat.js" type="text/javascript"></script>
    <script asp-append-version="true">
        var currentUserId = '@ViewBag.CurrentUserId';
        let editor;

        // CkEditor
        ClassicEditor.create(document.querySelector('#editor'), {
            toolbar: {
                items: [
                    'heading', '|', 'bold', 'italic', '|', 'link', '|', 'outdent', 'indent', '|', 'bulletedList', 'numberedList', '|', 'insertTable', '|', 'undo', 'redo'
                ],
                shouldNotGroupWhenFull: true
            },
            placeholder: 'Type the content here!'
        }).then(newEditor => {
            editor = newEditor;
        }).catch(err => {
            console.error(err.stack);
        });
    </script>
}
