<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Active Status" xml:space="preserve">
    <value>アクティブステータス</value>
  </data>
  <data name="Advising Bank" xml:space="preserve">
    <value>アドバイス銀行</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>通貨</value>
  </data>
  <data name="Delivery Period" xml:space="preserve">
    <value>納期</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>期限</value>
  </data>
  <data name="Inspection" xml:space="preserve">
    <value>検査</value>
  </data>
  <data name="Negotiation" xml:space="preserve">
    <value>折衝</value>
  </data>
  <data name="Order Ref." xml:space="preserve">
    <value>注文リファレンス</value>
  </data>
  <data name="Party Name" xml:space="preserve">
    <value>パーティー名</value>
  </data>
  <data name="PI Date" xml:space="preserve">
    <value>PI日</value>
  </data>
  <data name="PI No" xml:space="preserve">
    <value>PIノー</value>
  </data>
  <data name="Team Name" xml:space="preserve">
    <value>チームの名前</value>
  </data>
  <data name="Tenor" xml:space="preserve">
    <value>テノール</value>
  </data>
  <data name="Tolerance(%)" xml:space="preserve">
    <value>我慢(%)</value>
  </data>
  <data name="Trade Terms" xml:space="preserve">
    <value>営業態様</value>
  </data>
  <data name="Validity" xml:space="preserve">
    <value>有効期限</value>
  </data>
  <data name="Brand Name" xml:space="preserve">
    <value>ブランド名</value>
  </data>
  <data name="Country of Origin" xml:space="preserve">
    <value>生産国</value>
  </data>
  <data name="Delivery Close" xml:space="preserve">
    <value>配達終了</value>
  </data>
  <data name="Delivery Start" xml:space="preserve">
    <value>配達開始</value>
  </data>
  <data name="Export Status" xml:space="preserve">
    <value>輸出ステータス</value>
  </data>
  <data name="Followed By" xml:space="preserve">
    <value>に続く</value>
  </data>
  <data name="Freight" xml:space="preserve">
    <value>運送</value>
  </data>
  <data name="Gross Weight" xml:space="preserve">
    <value>総重量</value>
  </data>
  <data name="L/C No" xml:space="preserve">
    <value>L/Cノー</value>
  </data>
  <data name="Nego. Bank" xml:space="preserve">
    <value>ネゴ。銀行</value>
  </data>
  <data name="Net Weight" xml:space="preserve">
    <value>正味</value>
  </data>
  <data name="Note of PO" xml:space="preserve">
    <value>POのメモ</value>
  </data>
  <data name="Payment" xml:space="preserve">
    <value>代金</value>
  </data>
  <data name="Port of Discharge" xml:space="preserve">
    <value>荷揚げ港</value>
  </data>
  <data name="Port of Loading" xml:space="preserve">
    <value>積荷港</value>
  </data>
  <data name="Shipment Date" xml:space="preserve">
    <value>出荷日</value>
  </data>
</root>